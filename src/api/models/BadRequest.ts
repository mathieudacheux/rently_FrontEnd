// tslint:disable
/**
 * Api documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime'
import { GenericError, GenericErrorFromJSON, GenericErrorToJSON } from './'

/**
 *
 * @export
 * @interface BadRequest
 */
export interface BadRequest {
  /**
   * The error name
   * @type {string}
   * @memberof BadRequest
   */
  name: string
  /**
   * An error message
   * @type {string}
   * @memberof BadRequest
   */
  message: string
  /**
   * The status code of the exception
   * @type {number}
   * @memberof BadRequest
   */
  status: number
  /**
   * A list of related errors
   * @type {Array<GenericError>}
   * @memberof BadRequest
   */
  errors?: Array<GenericError>
  /**
   * The stack trace (only in development mode)
   * @type {string}
   * @memberof BadRequest
   */
  stack?: string
}

export function BadRequestFromJSON(json: any): BadRequest {
  return {
    name: json['name'],
    message: json['message'],
    status: json['status'],
    errors: !exists(json, 'errors')
      ? undefined
      : (json['errors'] as Array<any>).map(GenericErrorFromJSON),
    stack: !exists(json, 'stack') ? undefined : json['stack'],
  }
}

export function BadRequestToJSON(value?: BadRequest): any {
  if (value === undefined) {
    return undefined
  }
  return {
    name: value.name,
    message: value.message,
    status: value.status,
    errors:
      value.errors === undefined
        ? undefined
        : (value.errors as Array<any>).map(GenericErrorToJSON),
    stack: value.stack,
  }
}
